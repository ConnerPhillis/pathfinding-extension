<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="|#]9L(Y|G6h_s7jZ!FlZ">follower</variable><variable id="mHobs~vD]U;E0;=ey-XZ">target</variable><variable type="KIND_SpriteKind" id="fW!A#[7M^ghDNF*4R%so">Player</variable><variable type="KIND_SpriteKind" id="ip,PjzPpI}5Y4|XFe_7)">Projectile</variable><variable type="KIND_SpriteKind" id="B,lqMsniMTI#e~Mxs-H0">Food</variable><variable type="KIND_SpriteKind" id="Rr,hA8r4%?{XjgR79SG_">Enemy</variable></variables><block type="pxt-on-start" id="KzE`d9@=Pa,IHo;DT,,9" x="0" y="0"><statement name="HANDLER"><block type="tilemap_editor" id="TV-#d%=fm{,uafmpK#z0"><field name="tilemap">tilemap`level1`</field><data>{"commentRefs":[],"fieldData":{"tilemap":"level1"}}</data><next><block type="variables_set" id="pbRq34F1I_}zk2C*=ITs"><field name="VAR" id="|#]9L(Y|G6h_s7jZ!FlZ">follower</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="o$/8Q#b@PS1*R$:JT/ut"><value name="img"><shadow type="screen_image_picker" id="IXc/@N8CS9R!5_CI2pB0"><field name="img">img`
. . . . . . . . . . b 5 b . . . 
. . . . . . . . . b 5 b . . . . 
. . . . . . b b b b b b . . . . 
. . . . . b b 5 5 5 5 5 b . . . 
. . . . b b 5 d 1 f 5 5 d f . . 
. . . . b 5 5 1 f f 5 d 4 c . . 
. . . . b 5 5 d f b d d 4 4 . . 
. b b b d 5 5 5 5 5 4 4 4 4 4 b 
b d d d b b d 5 5 4 4 4 4 4 b . 
b b d 5 5 5 b 5 5 5 5 5 5 b . . 
c d c 5 5 5 5 d 5 5 5 5 5 5 b . 
c b d c d 5 5 b 5 5 5 5 5 5 b . 
. c d d c c b d 5 5 5 5 5 d b . 
. . c b d d d d d 5 5 5 b b . . 
. . . c c c c c c c c b b . . . 
. . . . . . . . . . . . . . . . 
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="kind"><shadow type="spritekind" id="9](glMJ]HP3x)Rk;9]F$"><field name="MEMBER">Player</field></shadow></value></block></value><next><block type="variables_set" id="$1fmI?hdTL#jDvO~B=%m"><field name="VAR" id="mHobs~vD]U;E0;=ey-XZ">target</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="^](t.]O#]]1vW0b)G);("><value name="img"><shadow type="screen_image_picker" id="9L{da@lX)bb64}NfVx/@"><field name="img">img`
........................
.....ffff...............
...fff22fff.............
..fff2222fff............
.fffeeeeeefff...........
.ffe222222eef...........
.fe2ffffff2ef...........
.ffffeeeeffff...........
ffefbf44fbfeff..........
fee41fddf14eef..........
.ffffdddddeef...........
fddddf444eef............
fbbbbf2222f4e...........
fbbbbf2222fd4...........
.fccf45544f44...........
..ffffffff..............
....ff..ff..............
........................
........................
........................
........................
........................
........................
........................
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="kind"><shadow type="spritekind" id="20s:O+!89`~$CTiHWS2v"><field name="MEMBER">Player</field></shadow></value></block></value><next><block type="mapplaceontile" id="c`9e!_v|{v7Y8VG+K=ah"><value name="sprite"><shadow type="variables_get" id="TjXX*Z/)KZGPQSmOot=O"><field name="VAR" id="|#]9L(Y|G6h_s7jZ!FlZ">follower</field></shadow></value><value name="loc"><shadow type="mapgettile" id="d[`_,.1CAP}L02}Jg9]c"><value name="col"><shadow type="math_number" id="sd@{y}CWYxHMn%Lb(7Yh"><field name="NUM">5</field></shadow></value><value name="row"><shadow type="math_number" id="nJNoIH*iCONjrT|}h==A"><field name="NUM">1</field></shadow></value></shadow></value><next><block type="mapplaceontile" id="v4y05i=EbnAVkwH5l#-K"><value name="sprite"><shadow type="variables_get" id="zy[+6`$P5?FjL=/WY(!r"><field name="VAR" id="mHobs~vD]U;E0;=ey-XZ">target</field></shadow></value><value name="loc"><shadow type="mapgettile" id="AP{)WUw-a;Q;x`Wn%pu)"><value name="col"><shadow type="math_number" id="l9Bamz3jlBd$,~H+`KwY"><field name="NUM">0</field></shadow></value><value name="row"><shadow type="math_number" id="`]w(s+g+m^IwJiv`p+Uu"><field name="NUM">2</field></shadow></value></shadow></value><next><block type="sprites_spriteTrackTargetSprite" id="y_PR0BAL)-bfmv~|4f~x"><value name="sprite"><block type="variables_get" id="8XR4/$Y!tNZ;6mZl./aF"><field name="VAR" id="|#]9L(Y|G6h_s7jZ!FlZ">follower</field></block></value><value name="targetSprite"><block type="variables_get" id="b@2f/OV{mpO!v=dj~TBp"><field name="VAR" id="mHobs~vD]U;E0;=ey-XZ">target</field></block></value><value name="time"><shadow type="math_number" id="p~bu*P;*kN8Cp(]Dd*1:"><field name="NUM">100</field></shadow></value><next><block type="typescript_statement" id="I;Ug#}T8Sn;V}WoQSuXD" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace sprites {" line1="" line2="    const maxGridSize = 256;" line3="" line4="" line5="" line6="    //% block=&quot;set $sprite to track $targetSprite and refresh every $time milliseconds&quot;" line7="    //% group=&quot;Pathfinding&quot;" line8="    //% weight=100" line9="    export function spriteTrackTargetSprite(sprite: Sprite, targetSprite: Sprite, time: number) {" line10="        " line11="        game.onUpdateInterval(time, () =&gt; {" line12="            const obstacleMap = createObstacleMap();" line13="" line14="" line15="            const followSpriteTileX = sprite.x &gt;&gt; 4;" line16="            const followSpriteTileY = sprite.y &gt;&gt; 4;" line17="" line18="            const targetSpriteX = targetSprite.x &gt;&gt; 4;" line19="            const targetSpriteY = targetSprite.y &gt;&gt; 4;" line20="" line21="            const followSpriteOnObstacle = obstacleMap[followSpriteTileX][followSpriteTileY]" line22="            console.log(followSpriteOnObstacle)" line23="" line24="" line25="        })        " line26="" line27="" line28="    }" line29="" line30="    function createObstacleMap() {" line31="        const tilemap = game.currentScene().tileMap;" line32="" line33="        const tileWidthCount = tilemap.areaWidth() &gt;&gt; 4;" line34="        const tileHeightCount = tilemap.areaHeight() &gt;&gt; 4;" line35="" line36="        const obstacleArray: boolean[][] = []" line37="        for (let i = 0; i &lt; tileWidthCount; i++) {" line38="            let innerObstacleArray = []" line39="            for (let j = 0; j &lt; tileHeightCount; j++) " line40="                innerObstacleArray.push(tilemap.isObstacle(i, j))" line41="        }" line42="" line43="        return obstacleArray;" line44="    }" line45="" line46="}" numlines="47"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>